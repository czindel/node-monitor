<!DOCTYPE html>
<html>
	<head>
	<title>{{ title }}</title>
	<link rel='stylesheet' href='/stylesheets/bootstrap.css' />
	<link rel='stylesheet' href='/stylesheets/bootstrap-theme.css' />
	<link rel='stylesheet' href='/stylesheets/style.css' />

	<script src="/javascripts/lib/jquery.js"></script>
	<script src="/javascripts/lib/underscore.js"></script>
	<script src="/javascripts/lib/bootstrap.js"></script>
	<script src="/javascripts/lib/angular.js"></script>
	<script src="/socket.io/socket.io.js"></script>

	<script type="text/javascript">

		var myApp = angular.module('MyDevApp', ['Services']);


		myApp.controller('Monitoring', function($scope, Socket) {

			$scope.stats = {};

			Socket.on('news', function(stats) {

				$scope.stats = stats;
			});
		});


		angular.module('Services', []).
		    factory('Socket', function($rootScope) {

		        var socket = io.connect();

		        return {
		            on: function(eventName, callback) {
		                socket.on(eventName, function() {
		                    var args = arguments;
		                    $rootScope.$apply(function() {
		                        callback.apply(socket, args);
		                    });
		                });
		            },
		            emit: function(eventName, data, callback) {
		                if(typeof data == 'function') {
		                    callback = data;
		                    data = {};
		                }
		                socket.emit(eventName, data, function() {
		                    var args = arguments;
		                    $rootScope.$apply(function() {
		                        if(callback) {
		                            callback.apply(socket, args);
		                        }
		                    });
		                });
		            },
		            emitAndListen: function(eventName, data, callback) {
		                this.emit(eventName, data, callback);
		                this.on(eventName, callback);
		            }
		        };
		    });

		angular.module('MyDevApp').filter('bytesToGigabytes', function () {
			return function (mb) {
				return mb/1024/1024/1024;
			}
		});

		angular.module('MyDevApp').filter('bytesToMegabytes', function () {
			return function (mb) {
				return mb/1024/1024;
			}
		});

		angular.module('MyDevApp').filter('ticksToPercent', function () {
			return function (input) {
				return convertTicksToPercent(input);
			}
		});


		function convertTicksToPercent(cpu){

			var total = 0;

			_.each(cpu, function(ticks){
				total += ticks;
			});

			var percents = {};

			_.each(cpu, function(value, key){
				percents[key] = value/total*100;
			});

			return percents;
		}
	</script>




	</head>
	<body>
		<div class="container" ng-app="MyDevApp">
			<div class="row" ng-controller="Monitoring">
				<div class="col-md-8">
					<h2>RAM</h2>
					<table class="table table-striped">
						<thead>
					 		<tr>
								<th>Type</th>
								<th>Size in GB</th>
								<th>Size in Byte</th>
							</tr>
					 	</thead>
						<tbody>
							<tr>
								<th>Free</th>
								<td>{{stats.freemem | bytesToGigabytes | number:2}}</td>
								<td>{{stats.freemem}}</td>
							</tr>
							<tr>
								<th>Total</th>
								<td>{{stats.totalmem | bytesToGigabytes | number:2}}</td>
								<td>{{stats.totalmem}}</td>
							</tr>
						</tbody>
					</table>


					<h2>CPU</h2>
					 <table class="table table-striped">
					 	<thead>
					 		<tr>
								<th></th>
								<th ng-repeat="(key, time) in stats.cpus[0].times">{{key}}</th>
							</tr>
					 	</thead>
					 	<tbody>
							<tr ng-repeat="cpu in stats.cpus">
								<td>{{cpu.model}}</td>
								<td ng-repeat="(key, time) in cpu.times | ticksToPercent ">{{time | number:2}}%</td>
							</tr>
					 	</tbody>
					</table>


					<h2>Process</h2>
					<table class="table table-striped">
						<thead>
					 		<tr>
								<th>Type</th>
								<th>Size</th>
							</tr>
					 	</thead>
						<tbody>
							<tr ng-repeat="(key, mem) in stats.process">
								<th>{{key}}</th>
								<td>{{mem | bytesToMegabytes | number:2}} MB</td>
							</tr>
						</tbody>
					</table>
				</div>
				<div class="col-md-4"></div>
			</div>
		</div>
	</body>
</html>